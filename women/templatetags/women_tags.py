from django import template # для работы с шаблонами
from women.models import Category # импортируем модели

# следующим шагом становится создание экземпляра класса Library, через который происходит регистрация собственных шаблонов тегов.

register =  template.Library()

@register.simple_tag(name='getcats') # декоратор (name='чтобы по-другому его назвать')
def get_categories(): # описываем функцию для работы простого тега
    return Category.objects.all()

# необходимо связать функцию с тегом, превратить ее в тег
# для этого используется спецаильный декоратор @register.simple_tag()

# с помощью простого тега можно брать данные из БД, избегая большой массы кода и места с помощью ссылки на БД. Но можно передать только коллекцию данных, а не фрагмент HTML
# второй тип - включающие теги можно использовать, когда нужно сформировать собственный шаблон на основе данных и вернуть HTML - страницу (фрагмент)

@register.inclusion_tag('women/list_categories.html') # включающий тег
def show_categories():
    cats = Category.objects.all() # сохраняет в переменную данные из БД
    return {'cats': cats} # возвращает эти данные по ключу 'cats'
# данные передаются шаблону list_categories.html, который будет возвращаться в шаблоне base.html